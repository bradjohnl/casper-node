name: Rust

env:
  GENESIS_FILES_DIR: ./resources/production
  NODE_BUILD_TARGET: ./target/release/casper-node
  #PROTOCOL_VERSION: dynamically generated below
  #UPGRADE_DIR: dynamically generated below
  #BIN_DIR: dynamically generated below
  NODE_BUILD_DIR: ./node
on:
  push:
    tags: 
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install required pip packages
      run: |
        pip install toml
    
    - name: Set PROTOCOL_VERSION
      run: |
        echo "PROTOCOL_VERSION=$(cat $GENESIS_FILES_DIR/chainspec.toml | python3 -c "import sys, toml; print(toml.load(sys.stdin)['protocol']['version'].replace('.','_'))")" >> $GITHUB_ENV

    - name: Set UPGRADE_DIR
      run: |
        echo "UPGRADE_DIR=./target/upgrade_build/$PROTOCOL_VERSION >> $GITHUB_ENV"

    - name: Set BIN_DIR
      run: |
        echo "BIN_DIR=$UPGRADE_DIR/bin >> $GITHUB_ENV"

    - name: Set CONFIG_DIR
      run: |
        echo "CONFIG_DIR=$UPGRADE_DIR/config >> $GITHUB_ENV"

    - name: Set readme
      run: |
        echo "readme=$BIN_DIR/README.md >> $GITHUB_ENV"

    - name: Create BIN_DIR
      run: |
        mkdir -p "$BIN_DIR"

    - name: Generate README
      uses: cuchi/jinja2-action@v1.2.0
      with:
        template: ./.github/workflows/templates/README.md.j2
        output_file: $BIN_DIR/README.md
    
    - name: Preparing for packaging bin.tar.gz
      run: |
        cp "$NODE_BUILD_TARGET" "$BIN_DIR"

    - name: Packaging bin.tar.gz
      uses: thedoctor0/zip-release@master
      with:
        type: 'tar'
        filename: '../bin.tar.gz'
        directory: $BIN_DIR

    - name: "Preparing for packaging config.tar.gz"
      run: |
        mkdir -p "$CONFIG_DIR"
        cp "$GENESIS_FILES_DIR/chainspec.toml" "$CONFIG_DIR"
        cp "$GENESIS_FILES_DIR/config-example.toml" "$CONFIG_DIR"
        cp "$GENESIS_FILES_DIR/accounts.toml" "$CONFIG_DIR"

    - name: Packaging config.tar.gz
      uses: thedoctor0/zip-release@master
      with:
        type: 'tar'
        filename: '../config.tar.gz'
        directory: $CONFIG_DIR

    - name: Cleanup
      run: |
        rm -rf $CONFIG_DIR
        rm -rf $BIN_DIR